<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">
	<select id="list" resultType="com.pro.spring01.model.member.dto.MemberDTO">
		<include refid="paging_header" />
		select * from member
		<include refid="search" />
		order by regdate
		<include refid="paging_footer" /> 
	</select>
	
	<insert id="insert" >
		insert into member (userid,userpwd,name,email,tel,gender,zipcode,address1,address2,power) 
		values (#{userid}, #{userpwd}, #{name}, #{email}, 
		#{tel}, #{gender}, #{zipcode}, #{address1}, #{address2}, #{power})
	</insert>
	
	<select id="pwdCheck" resultType="int"> <!-- 값이 1 아니면 0이기 때문에 resultType="int" -->
		select count(*) from member 
		where userid = #{userid} <!-- and userpwd = #{userpwd} -->
	</select>
	
	<select id="idCheck" resultType="int"> <!-- 값이 1 아니면 0이기 때문에 resultType="int" -->
		select count(*) from member where userid = #{userid}
	</select>
	
	<select id="loginCheck" resultType="com.pro.spring01.model.member.dto.MemberDTO">
		select * from member where userid = #{userid}
	</select>
	
	<select id="detail" resultType="com.pro.spring01.model.member.dto.MemberDTO">
		select * from member where userid = #{userid}
	</select>
	
	<update id="updated">
		update member set userpwd = #{userpwd}, name = #{name}, email = #{email}, tel = #{tel},
		zipcode = #{zipcode}, address1 = #{address1}, address2 = #{address2}
		where userid = #{userid}
	</update>
	
	<update id="userUpdate">
		update member set name = #{name}, email = #{email}, tel = #{tel},
		zipcode = #{zipcode}, address1 = #{address1}, address2 = #{address2}
		where userid = #{userid}
	</update>
	
	<delete id="deleted">
		delete from member where userid = #{userid}
	</delete>
	
	<update id="changePwd">
		update member set userpwd = #{userpwd} where userid = #{userid}
	</update>
	
	<select id="findPwd" resultType="com.pro.spring01.model.member.dto.MemberDTO">
		select * from member 
		where userid = #{userid} and email = #{email}
	</select>
	
	<select id="countMember" resultType="int">
        select count(*) from member   
        <include refid="search" />
    </select>
    
    <sql id="paging_header">
		select *
		from (
		select rownum as rn, A.*
		from (
	</sql>

	<sql id="paging_footer">
		) A
		) where rn between #{start} and #{end}
	</sql>

	<sql id="search">
        <choose>
            <when test="search_option == 'userid' ">
      			where (userid like '%'||#{keyword}||'%')        
            </when>
            <when test="search_option == 'name' ">
      			where (name like '%'||#{keyword}||'%')     
            </when>
            <!-- <otherwise>
                where ${search_option} like '%'||#{keyword}||'%'  
            </otherwise> -->
        </choose>
    </sql>
</mapper>